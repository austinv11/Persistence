group 'com.austinv11'
version '1.0.0'

buildscript {
    ext.kotlin_version = '1.1.2-2'
    ext.kotlin_coroutines_version = '0.15'
    ext.slf4j_version = '1.7.24'
    ext.msgpack_version = '0.8.13'
    ext.dokka_version = '0.9.14'
    ext.jsr305_version = '3.0.0'

    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'org.jetbrains.dokka'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:$kotlin_coroutines_version"
    compile "com.google.code.findbugs:jsr305:$jsr305_version"
    compile "org.slf4j:slf4j-api:$slf4j_version"
    compile "org.msgpack:msgpack-core:$msgpack_version"
    
    testCompile "org.slf4j:slf4j-simple:$slf4j_version"
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: dokka) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

javadoc {
    failOnError false
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

dokka {
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/docs/javadoc"
    jdkVersion = 8
}
